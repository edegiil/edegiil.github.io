{"version":3,"sources":["webpack://edegiil.github.io/./src/pages/devlog.js"],"names":["Background","styled","ContentSection","props","theme","tablet","mobile","TitleGroup","Title","Filter","FilterElement","Main","Post","DARK_COLOR","Thumbnail","EmptyImage","PostInfoSection","PostTitle","PostCategory","PostSubtitle","PostDateCreated","data","allMdx","distinct","group","useState","undefined","category","setCategory","list","setList","useEffect","filter","v","fieldValue","edges","all_posts","map","i","reduce","prev","curr","concat","onClick","key","String","totalCount","node","frontmatter","title","summary","date_created","thumbnail","path","Link","to","src"],"mappings":"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","file":"component---src-pages-devlog-js-ee9cf18fdad544ec24ec.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport {Link, graphql} from 'gatsby';\n\nconst Background = styled.div`\n  display: flex;\n  min-height: 100vh;\n  width: 100vw;\n  padding: 81px 0;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ContentSection = styled.section`\n  width: 900px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  @media ${(props) => props.theme.tablet} {\n    width: 350px;\n  }\n  @media ${(props) => props.theme.mobile} {\n    width: 350px;\n  }\n`;\n\nconst TitleGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 900px;\n  @media ${(props) => props.theme.tablet} {\n    width: 350px;\n  }\n  @media ${(props) => props.theme.mobile} {\n    width: 350px;\n  }\n`;\n\nconst Title = styled.h2`\n  font-weight: 100;\n  margin: 0;\n`;\n\nconst Filter = styled.div`\n  display: grid;\n  grid-auto-flow: column dense;\n  justify-items: end;\n  column-gap: 12px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n`;\n\nconst FilterElement = styled.div`\n  cursor: pointer;\n`;\n\nconst Main = styled.main`\n  display: grid;\n  flex-direction: column;\n  width: 900px;\n  row-gap: 16px;\n  margin-top: 16px;\n  @media ${(props) => props.theme.tablet} {\n    width: 350px;\n  }\n  @media ${(props) => props.theme.mobile} {\n    width: 350px;\n  }\n`;\n\nconst Post = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  padding-bottom: 16px;\n  border-bottom: 1px solid ${(props) => props.theme.DARK_COLOR};\n  @media ${(props) => props.theme.tablet} {\n    flex-direction: column;\n  }\n  @media ${(props) => props.theme.mobile} {\n    flex-direction: column;\n  }\n`;\n\nconst Thumbnail = styled.img`\n  width: 360px;\n  height: 210px;\n  background-color: ${(props) => props.theme.DARK_COLOR};\n  @media ${(props) => props.theme.tablet} {\n    margin-bottom: 8px;\n  }\n  @media ${(props) => props.theme.mobile} {\n    width: 350px;\n    height: 201px;\n  }\n`;\n\nconst EmptyImage = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 360px;\n  height: 210px;\n  background-color: ${(props) => props.theme.DARK_COLOR};\n  @media ${(props) => props.theme.tablet} {\n    margin-bottom: 8px;\n  }\n  @media ${(props) => props.theme.mobile} {\n    width: 350px;\n    height: 201px;\n  }\n`;\n\nconst PostInfoSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-left: 24px;\n  @media ${(props) => props.theme.tablet} {\n    margin-left: 0;\n  }\n  @media ${(props) => props.theme.mobile} {\n    margin-left: 4px;\n  }\n`;\n\nconst PostTitle = styled.h3`\n  margin: 0;\n  margin-bottom: 16px;\n  @media ${(props) => props.theme.tablet} {\n    margin-bottom: 8px;\n  }\n  @media ${(props) => props.theme.mobile} {\n    margin-bottom: 8px;\n  }\n`;\n\nconst PostCategory = styled.h4`\n  margin: 0;\n  font-weight: 100;\n`;\n\nconst PostSubtitle = styled.h4`\n  margin: 0;\n  margin-bottom: 8px;\n  font-weight: 100;\n`;\n\nconst PostDateCreated = styled.p`\n  margin: 0;\n  font-weight: 100;\n`;\n\nfunction Devlog({data}) {\n  const {distinct, group} = data.allMdx;\n\n  const [category, setCategory] = useState(undefined);\n  const [list, setList] = useState([]);\n\n  useEffect(() => {\n    if (category) {\n      setList(group.filter((v) => v.fieldValue === category)[0].edges);\n    } else {\n      const categories = group.map((v, i) => {\n        return v.edges;\n      });\n      const all_posts = categories.reduce((prev, curr) => prev.concat(curr));\n      setList(all_posts);\n    }\n  }, [category, group]);\n\n  const handleCategory = (v) => () => setCategory(v);\n  const clearCategory = () => setCategory(undefined);\n\n  return (\n    <Background>\n      <ContentSection>\n        <TitleGroup>\n          <Title>DEV.Log</Title>\n        </TitleGroup>\n        <Filter>\n          <FilterElement onClick={clearCategory}>전체</FilterElement>\n          {\n            distinct.map((key, i) => {\n              return (\n                <FilterElement\n                  key={String(key)}\n                  onClick={handleCategory(key)}\n                >\n                  {`${key}(${group[i].totalCount})`}\n                </FilterElement>\n              );\n            })\n          }\n        </Filter>\n        <Main>\n          {\n            list && list.map((v, i) => {\n              const {category, title, summary, date_created, thumbnail, path} = v.node.frontmatter;\n              return (\n                <Link to={`/${path}`} key={String(i)}>\n                  <Post>\n                    {\n                      thumbnail ?\n                        <Thumbnail src={thumbnail} /> :\n                        <EmptyImage>No Image</EmptyImage>\n                    }\n                    <PostInfoSection>\n                      <PostCategory>{`#${category}`}</PostCategory>\n                      <PostTitle>{title}</PostTitle>\n                      <PostSubtitle>{summary}</PostSubtitle>\n                      <PostDateCreated>{date_created}</PostDateCreated>\n                    </PostInfoSection>\n                  </Post>\n                </Link>\n              );\n            })\n          }\n        </Main>\n      </ContentSection>\n    </Background>\n  );\n}\n\nexport const query = graphql`\n  {\n    allMdx(sort: {order: DESC, fields: frontmatter___date_created}) {\n      distinct(field: frontmatter___category)\n      group(field: frontmatter___category) {\n        edges {\n          node {\n            frontmatter {\n              path\n              category\n              date_created\n              title\n              summary\n              thumbnail\n            }\n          }\n        }\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nexport default Devlog;\n"],"sourceRoot":""}