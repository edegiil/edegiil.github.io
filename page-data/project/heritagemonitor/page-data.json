{"componentChunkName":"component---src-templates-project-js","path":"/project/heritagemonitor","result":{"data":{"markdownRemark":{"html":"<h3>프로젝트에 대한 이야기</h3>\n<p>AioT 디바이스 기반 문화재 통합 관리 솔루션</p>\n<p>코드를 좀 잘 쓰려고 노력했다. 누가 봐도 이해가 될 수 있게, 예쁜 코드를 써보려고 노력했다. 개발자는 나 혼자 뿐이지만, 다음에 누군가 봐도 유지보수하기 편한 코드를.\n서비스 개발을 어떻게 할지 설계부터, 디자인, DB 설계, 클라우드 설계, API 설계, 테스트 코드 작성까지 다 혼자 찾아서 했다.</p>\n<p>가장 크게 성장했던 것 같다.</p>\n<p>내가 가지고 있는 기술 스택을 총동원해서 자바스크립트 베이스로 모든 스택을 결정했다.</p>\n<p>디자인도 공공 납품을 위해 정부 가이드라인도 다운받아서 참고해서 디자인했다.\nDB는 생전 처음으로 관계형 데이터베이스를 사용했고, MySQL을 사용했다.\n클라우드도 처음엔 Google Cloud Platform으로 결정했지만, 공공기관 납품을 하려다 보니 SaaS인증이 필요했고, 그게 가능한건 국내 사업자. 그 중 기능이 비교적 많은게 네이버 클라우드라 네이버 클라우드를 선택했다.\n프론트엔드 테스트는 아직 크게 필요성을 못느껴 시도를 안했다. 어차피 웹으로 볼 수 있으니까. 그렇지만 백엔드는 하나하나 POSTMAN으로 테스트하고 있을 시간이 없어서, jest와 supertest를 사용해서 API 개발을 TDD 방식으로 진행해봤다. 확실히 코드 리팩토링할 때 편했다.</p>\n<h3>개발한 내용은?</h3>\n<ul>\n<li>서비스 설계</li>\n<li>클라우드 설계</li>\n<li>데이터베이스 설계 (MySQL)</li>\n<li>웹디자인</li>\n<li>프론트엔드 개발</li>\n<li>백엔드 개발 (API, 소켓)</li>\n<li>테스트 코드 작성</li>\n</ul>\n<h3>사용한 기술 스택</h3>\n<ul>\n<li>ReactJS : 프론트엔드 개발. 3대 라이브러리 중 유일하게 할 줄 아는 거라...</li>\n<li>ExpressJS : 백엔드 API, 실시간 소켓, ioT 트리거 개발을 해야하는데, API는 가벼운 비즈니스 로직만 서버리스 플랫폼에 올려도 되어서 선택.ioT 트리거도 마친가지. 실시간 소켓은 Web Socket으로 하는데, 프론트엔드에서도 받기 편하게 하기 위해 Socket.io를 사용해서 선택</li>\n<li>MySQL : 원래 할 줄알던 Google Firestore로 개발하려고 했는데, 공공기관 납품용인지라 구글 클라우드 사용이 불가능했다. 그래서 인증을 받은 클라우드 중 가장 기능이 다양한 네이버 클라우드 플랫폼을 선택하게 되었는데, 쉽게 구축할 수 있는게 관계형 데이터베이스 밖에 없어서 MySQL을 ORM인 Sequelize를 공부해서 적용했다.</li>\n<li>Naver Cloud Platform : 원래 구글 클라우드 플랫폼을 주력으로 쓰고, 계속 그것만 쓰고 싶었지만... 공공기관용 클라우드 인증을 받은 국내 사업자만 사용해야 해서 네이버 클라우드 플랫폼을 선택했다. 예상외로 기능이 다양했지만, 문서가 조금 많이 빈약했다.</li>\n<li>Jest, Supertest : API 테스트를 위해 사용. GCP 문서에는 mocha를 사용하던데, 뭔가 Jest에 꽂혀서 Jest를 사용했다.</li>\n</ul>\n<h3>프로젝트하면서 겪은 문제와 해결방법</h3>\n<p>현재 프로젝트 중</p>","frontmatter":{"title":"05__헤리티지 모니터","summary":"문화재 통합 관리 솔루션","time":"2020.5 ~","platform":"WEB","link":"https://ceedup.com"}}},"pageContext":{}},"staticQueryHashes":[]}